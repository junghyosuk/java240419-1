package oop;

//메소드(Method) : 클래스에 작성된 함수 - 멤버함수
// => 필드(멤버변수)를 사용하여 원하는 기능을 구현하기 위한 명령의 모임
// => Java 명령은 메소드에서만 작성 가능

//함수(Function) : 매개변수로 전달받은 값을 연산 처리하여 결과값을 반환하는 명령의 모임

//메소드 작성 방법
//형식) 반환형 메소드명(자료형 변수명, 자료형 변수명, ...) {
//            명령;
//            ...
//      }
// => 메소드를 호출(Invoke)해야만 메소드에 작성된 명령 실행 - 기능 구현

//반환형(ReturnType) : 메소드를 호출하여 얻을 수 있는 결과값에 대한 자료형 
// => void 자료형(무반환형) : 메소드를 호출하여 얻어을 있는 결과값이 없는 경우 사용하는 자료형

//메소드명은 식별자로 카멜 표기법을 사용하여 작성하는 것을 권장

//메소드 () 기호 안에 작성된 변수를 매개변수(Parameter - Argument)라고 하며 [,] 기호를 사용하여 나열 작성 가능
// => 메소드에 작성된 명령을 실행하기 위해 필요한 값을 메소드 호출시 전달받아 저장하기 위한 변수
// => 전달값이 필요없는 경우 매개변수 작성 생략 가능

//메소드 호출(Invoke) : 메소드에 작성된 명령을 실행하여 필요한 기능 구현
//형식) 객체.메소드명(값, 값, ...);
// => 참조변수에 저장된 메모리 주소로 객체를 참조하여 클래스에 작성된 메소드 호출
// => 메소드 호출시 매개변수에 차례대로 값을 전달하여 저장해야만 메소드 호출 가능
// => 매개변수에 정상적으로 값이 전달되지 않은 경우 메소드 호출 불가능 - 에러 발생

//객체 생성을 목적으로 작성된 클래스
public class Method {
	void displayOne() {
		System.out.println("Method 클래스에 작성된 displayOne() 메소드 호출");
	}
	
	void displayTwo() {
		System.out.println("Method 클래스에 작성된 displayTwo() 메소드 호출");
	}
}
